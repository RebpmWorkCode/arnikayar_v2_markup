{% set adView = _view.loadHelper('Agency.AdView') %}
{% set agencyIndexSite = _view.loadHelper('Agency.AgencyIndexSite') %}
{% set imageResized = _view.loadHelper('ImageCompress.ImageResized') %}
{% set adSeo = _view.loadHelper('Agency.AdSeo') %}
{% set rusTime = _view.loadHelper('Fastadmin.RusTime') %}
{% set complexCategory = _view.loadHelper('ComplexCategories.ComplexCategory') %}
{% set favorite = _view.loadHelper('Favorites.Favorite') %}
{% set complexCategorySearch = _view.loadHelper('ComplexCategories.ComplexCategorySearch') %}
{% set session = _view.loadHelper('Session') %}
{{ adView.setDefaults({default_picture: config.Site.no_photo_image}) }}
{{ _view.assign('title', adSeo.titleList()) }}
{{ _view.Html.script('/uploads/assets/js/favorites.js?v=4', {'block': 'scriptCustom'}) }}
{{ _view.Html.script('/uploads/assets/js/ajaxLoad.js?v=567436', {'block': 'scriptCustom'}) }}
{% if not attribute(_view.request, 'query') is empty %}
    {% set countObj = '(' ~ paginator.params.count ~ ')' %}
    {% set orangeColor = 'orangeColor' %}
{% endif %}
<div class="grid">
    <div class="wrap">
        <h1>Все объекты <i>{{ countObj }}</i></h1>
        <div class="content">
            <div class="category">
                <div class="wrapper">
                    <a href="/?category_id=4">Дома и таунхаусы</a>
                    <a href="/?category_id=7">Квартиры и апартаменты</a>
                    <a href="/?category_id=37">Земельные участки</a>
                    <a href="/?category_id=2">Коммерческая недвижимость</a>
                </div>
            </div>
            <div id="map">
                <div class="map-objects" id="map-list">
                    <div class="map-block">
                        <form action="/agency/realty/map">
                            <button type="submit">Показать объявления на карте</button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="sort">
                <p>сортировка:</p>
                {{ form.create('Advertisement', {
                    'url': {'plugin':'agency','controller':'realty','action':'index'},
                    'type': 'get'
                }) }}
                {% set sortingValue = [_view.request.query('sort'), _view.request.query('direction')]|join('_') %}
                {% set sortingValue = sortingValue != '_' ? sortingValue|replace({'Advertisement.': ''}) : '' %}
                {{ form.input('sorting', {
                    'type': 'select',
                    'name': 'sort',
                    'class': 'select-sorting',
                    'options': {
                        'price_desc': 'сначала дороже',
                        'price_asc': 'сначала дешевле',
                        'created_desc': 'сначала новые',
                    },
                    'default': 'created_desc',
                    'label': false,
                    'div': false,
                    'value': sortingValue,
                }) }}
                {{ form.end() }}
            </div>
            <div class="cards-wrapper">
                <div class="cards" id="cards">
                    {% for item in list %}
                        {% set offerItem = adView.getInfo(item) %}
                        {% set gallery = adView.getGallery(item) %}
                        {% set paramsValues = item.CategoryParamValues ?? [] %}
                        {% set arhitectyr = complexCategory.getViewAliasesOptions('arhitectyr', paramsValues) %}
                        {% set renovation = complexCategory.getViewAliasesOptions('renovation', paramsValues) %}
                        {% set view_house = complexCategory.getViewAliasesOptions('view_house', paramsValues) %}
                        {% set swimming_pool = complexCategory.getViewAliasesOptions('swimming_pool', paramsValues) %}
                        {% set bath_house = complexCategory.getViewAliasesOptions('bath_house', paramsValues) %}
                        {% set guest_house = complexCategory.getViewAliasesOptions('guest_house', paramsValues) %}
                        {% set place_car = complexCategory.getViewAliasesOptions('place_car', paramsValues) %}
                        <div class="card">
                            <a href="{{ offerItem.url }}" target="_self">
                                <div class="image">
                                    <div class="swiper-container-item">
                                        <div class="swiper-wrapper">
                                            {% set galleryList = gallery.items ?: [gallery.first] %}
                                            {% set galleryList = galleryList|slice(0, 6) %}
                                            {% set galleryResizeList = imageResized.resizePicture(galleryList, {'width': '379', 'height': '266', 'mode': 'crop', 'paddings': false, 'folder': 'twig_crop_realty_list', 'cache_path_size': true}) %}
                                            {% for i, galleryItem in galleryResizeList %}
                                                <div href="#" class="swiper-slide" style="background-image: url({{ galleryItem.src }});"></div>
                                            {% endfor %}
                                        </div>
                                        <!-- Add Pagination -->
                                        <div class="swiper-pagination"></div>
                                    </div>
                                </div>
                                <div class="group">
                                    <div class="inf">
                                        {% set siteArea = complexCategory.getViewAliasesOptions('site_area', paramsValues) %}
                                        {% if siteArea %}
                                            <p><img src="/uploads/assets/images/icon/square.svg" alt=""> {{ siteArea }} сот</p>
                                        {% endif %}
                                        {% set spalen = complexCategory.getViewAliasesOptions('spalen', paramsValues) %}
                                        {% if spalen %}
                                            <p><img src="/uploads/assets/images/icon/bed.svg" alt=""> {{ spalen }}</p>
                                        {% endif %}
                                        {% set house_area = complexCategory.getViewAliasesOptions('house_area', paramsValues) %}
                                        {% if house_area %}
                                            <p><img src="/uploads/assets/images/icon/squarehouse.svg" alt=""> 270 м²</p>
                                        {% endif %}
                                    </div>
                                    <div class="price">
                                        <p>{{ item.Advertisement.price }} ₽</p>
                                        {% set part = complexCategory.getViewAliasesOptions('part', paramsValues) %}
                                        {% if session.read('Auth.User.id') and part %}
                                            <p class="commission">комиссия {{ part }} %</p>
                                        {% endif %}
                                    </div>
                                    <div class="title">
                                        {% set zagolovok = complexCategory.getViewAliasesOptions('zagolovok', paramsValues) %}
                                        {% if zagolovok %}
                                            <p>{{ zagolovok }}</p>
                                        {% else %}
                                            <p>{{ item.Advertisement.title }}</p>
                                        {% endif %}
                                    </div>
                                    <div class="location">
                                        <img src="/uploads/assets/images/icon/marker-map.svg" alt="marker">
                                        {% if item.Location.Locality.title %}
                                            <object>
                                                <a href="/?locality_id={{ item.Location.Locality.id }}">
                                                    <p>{{ item.Location.Locality.title }}</p>
                                                </a>
                                            </object>
                                        {% endif %}
                                    </div>
                                </div>
                            </a>
                            <div class="group">
                                <div class="tags">
                                    {% if item.Youtube|length > 0 %}
                                        <a href="?with_video=1">с видео</a>
                                    {% endif %}
                                    {% if arhitectyr and (item.CategoryParamValues.arhitectyr.value == 1 or item.CategoryParamValues.arhitectyr.value == 2) %}
                                        <a href="?arhitectyr={{ item.CategoryParamValues.arhitectyr.value }}">{{ arhitectyr }}</a>
                                    {% endif %}
                                    {% if item.CategoryParamValues.view_house.value[0] == 1  %}
                                        <a href="?view_house=1">с видом на море</a>
                                    {% endif %}
                                    {% if renovation and item.CategoryParamValues.renovation.value == 1 %}
                                        <a href="?renovation={{ item.CategoryParamValues.renovation.value }}">с ремонтом</a>
                                    {% endif %}
                                    {% if swimming_pool and item.CategoryParamValues.swimming_pool.value == 1 %}
                                        <a href="?swimming_pool={{ item.CategoryParamValues.swimming_pool.value }}">с бассейном</a>
                                    {% endif %}
                                    {% if bath_house and item.CategoryParamValues.bath_house.value == 1 %}
                                        <a href="?bath_house={{ item.CategoryParamValues.bath_house.value }}">с баней</a>
                                    {% endif %}
                                    {% if item.CategoryParamValues.place_car.value[0] == 1  %}
                                        <a href="?place_car=1">с гаражом</a>
                                    {% endif %}
                                    {% if guest_house and item.CategoryParamValues.guest_house.value != 1 %}
                                        <a href="?guest_house={{ item.CategoryParamValues.guest_house.value }}">с гостевым домом</a>
                                    {% endif %}
                                </div>
                                <div class="interface">
                                    {% set isFavorite = favorite.has('Advertisement', item.Advertisement.id) %}
                                    <a href="#" class="favorite {{ isFavorite ? 'active' : ''}}" data-favorite="{{ isFavorite ? 'remove' : 'add'}}"
                                       data-favorite-invert="{{ isFavorite ? 'add' : 'remove'}}" data-favorite-id="{{ item.Advertisement.id }}"></a>
                                    <a href="#" class="share" data-attr-title="{{ item.Advertisement.title ? item.Advertisement.title : item.Location.SubLocality.title }}" data-attr-url="/agency/realty/view/{{ item.Advertisement.id }}"></a>
                                    <a href="/agency/realty/print_view/{{ item.Advertisement.id }}.pdf?template=cPresent1&layout=default&orientation=portrait" class="pdf" target="_blank"></a>
                                    {% if session.read('Auth.User.id') %}
                                        {% set agencyCompilation = agencyIndexSite.getAgencyCompilation() %}
                                        {% set hasInCompilation = false %}
                                        {% set titleButtonCompilation = 'Добавить в подборку' %}
                                        {% if item.Advertisement.id in attribute(agencyCompilation, 'selection') %}
                                            {% set hasInCompilation = true %}
                                            {% set titleButtonCompilation = 'Убрать из подборки' %}
                                        {% endif %}
                                        <a href="#" title="{{ titleButtonCompilation }}" data-id="{{ item.Advertisement.id }}" data-agency-compilation-id="{{ attribute(agencyCompilation, 'id') }}" class="folder {{ hasInCompilation ? 'active' : ''}} collection"></a>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
                <div class="pagination">
                    <button id="more">показать еще</button>
                </div>
            </div>
        </div>
        <div class="filters">
            {{ form.create('Advertisement', {'url': filterUrl}) }}
                {{ form.hidden('sort', {'value': _view.request.query('sort')}) }}
                {{ form.hidden('direction', {'value': _view.request.query('direction')}) }}
                    <div class="group base">
                        <span class="title">Район</span>
                        {% for countyItem in countiesFormat %}
                            <label>
                                {{ form.input('county_id.', {
                                    'type': 'checkbox',
                                    'value': countyItem.id,
                                    'label': false,
                                    'div': false,
                                    'class': false,
                                    'required': false,
                                    'hiddenField': false,
                                    'id': 'AdvertisementCounty' ~ countyItem.id,
                                    'checked': countyItem.id in _view.request.query('county_id')
                                }) }}
                                <p>{{ countyItem.title }}</p>
                            </label>
                        {% endfor %}
                    </div>
                    <div class="group" data-alias="price">
                        <span class="title">Цена, ₽</span>
                        <div class="range">
                            {{ form.input('price_from', {'class': 'price-mask', 'label': false, 'div': false, 'type': 'text', 'placeholder': 'от'}) }}
                            {{ form.input('price_to', {'class': 'price-mask', 'label': false, 'div': false, 'type': 'text', 'placeholder': 'до'}) }}
                        </div>
                    </div>
                    <div class="group" data-alias="site_area">
                        <span class="title">Участок, сот</span>
                        <div class="range">
                            {{ form.input('site_area_from', {'label': false, 'div': false, 'type': 'text', 'placeholder': 'от'}) }}
                            {{ form.input('site_area_to', {'label': false, 'div': false, 'type': 'text', 'placeholder': 'до'}) }}
                        </div>
                    </div>
                    <div class="group" data-alias="house_area">
                        <span class="title">Площадь дома, м²</span>
                        <div class="range">
                            {{ form.input('house_area_from', {'label': false, 'div': false, 'type': 'text', 'placeholder': 'от'}) }}
                            {{ form.input('house_area_to', {'label': false, 'div': false, 'type': 'text', 'placeholder': 'до'}) }}
                        </div>
                    </div>
                    <div class="group circle" data-alias="spalen">
                        <span class="title">Количество спален</span>
                        {% for id,label in spalens|sort((a, b) => a <=> b) %}
                            <label>
                                {{ form.checkbox('spalen.', {
                                    'hiddenField': false,
                                    'div': false,
                                    'value': id,
                                    'id': 'AdvertisementSpalen'~id,
                                    'checked': id in _view.request.query('spalen')
                                }) }}
                                <p>{{ label }}</p>
                            </label>
                        {% endfor %}
                    </div>
                    <div class="group base column" data-alias="interior_decoration">
                        <span class="title">Ремонт</span>
                        {% for id,label in interiorDecorations %}
                            <label>
                                {{ form.checkbox('interior_decoration.', {
                                    'class': false,
                                    'hiddenField': false,
                                    'div': false,
                                    'value': id,
                                    'id': 'AdvertisementInteriorDecoration'~id,
                                    'checked': id in _view.request.query('interior_decoration')
                                }) }}
                                <p>{{ label }}</p>
                            </label>
                        {% endfor %}
                    </div>
                    <div class="group circle" data-alias="number_of_floors">
                        <span class="title">Количество этажей</span>
                        {% for id,label in numberFloors %}
                            <label>
                                {{ form.checkbox('number_of_floors.', {
                                    'class': false,
                                    'hiddenField': false,
                                    'div': false,
                                    'value': id,
                                    'id': 'AdvertisementNumberOfFloors'~id,
                                    'checked': id in _view.request.query('number_of_floors')
                                }) }}
                                <p>{{ label }}</p>
                            </label>
                        {% endfor %}
                    </div>
                    <div class="group tags" data-group="checkbox-aliases">
                        <label>
                            {{ form.input('arhitectyr', {'type': 'checkbox','hiddenField': false, 'value': '1', 'checked': '1' in _view.request.query('arhitectyr'), 'id': 'arhitectyr1','label': false,'div': false}) }}
                            <p>хай-тек</p>
                        </label>
                        <label>
                            {{ form.input('renovation', {'type': 'checkbox','hiddenField': false,'value': '1','label': false,'div': false}) }}
                            <p>шале</p>
                        </label>
                        <label>
                            {{ form.input('view_house', {'type': 'checkbox','hiddenField': false,'value': '1','label': false,'div': false}) }}
                            <p>с видом на море</p>
                        </label>
                        <label>
                            {{ form.input('swimming_pool', {'type': 'checkbox','hiddenField': false,'value': '1','label': false,'div': false}) }}
                            <p>с видео</p>
                        </label>
                        <label>
                            {{ form.input('bath_house', {'type': 'checkbox','hiddenField': false,'value': '1','label': false,'div': false}) }}
                            <p>с бассейном</p>
                        </label>
                        <label>
                            {{ form.input('place_car', {'type': 'checkbox','hiddenField': false, 'value': '1', 'label': false,'div': false}) }}
                            <p>с баней</p>
                        </label>
                        <label>
                            {{ form.input('arhitectyr.', {'type': 'checkbox','hiddenField': false, 'value': '2', 'checked': '2' in _view.request.query('arhitectyr'), 'id': 'arhitectyr2', 'label': false,'div': false}) }}
                            <p>с ремонтом</p>
                        </label>
                        <label>
                            {{ form.input('guest_house', {'type': 'checkbox', 'hiddenField': false, 'value': _view.request.query('guest_house') ?: 5, 'label': false,'div': false}) }}
                            <p>с гаражом</p>
                        </label>
                        <label>
                            {{ form.input('with_video', {'type': 'checkbox','hiddenField': false, 'value': '1', 'label': false,'div': false}) }}
                            <p>с гостевым домом</p>
                        </label>
                    </div>
                    <a href="#" class="reset">сбросить все фильтры</a>
                <div class="buttons">
                    <button type="submit">показать {{ countObj }} объявлений</button>
                    <a href="/agency/realty/map"><span>показать на карте</span><img src="/uploads/assets/images/icon/ep_map-location.svg" alt="map"></a>
                    <a href="#" class="mob out">выйти</a>
                </div>
            {{ form.end() }}
        </div>
    </div>
</div>

<script>
    window.paginator_url = '{{ adList.paginateAjaxUrl() }}';
    window.paginator_limit = {{ paginator.params().pageCount }};
    window.paginator_request_limit = {{ paginator.params().limit }};
    window.paginator_request_page = {{ paginator.params().page }};
</script>

{{ _view.assign('title', 'Все объекты на карте') }}
{{ html.script(['https://api-maps.yandex.ru/2.1/?lang=ru_RU', 'Agency.filter-map-site', 'YandexMaps.simplify'], {'block': 'scriptCustom'}) }}
{{ html.scriptStart({'block': 'scriptCustom', 'safe': false}) }}
let ClusterIs2bMapSite = {
url: null,
init: function (YandexMapCenter, url) {
this.url = url;
Is2bMap.init('map-list', YandexMapCenter, [], {
'isAdmin': false,
'yaMapOptions' : {
'minZoom': 0,
'maxZoom':  11
}
});
let d = '';
this.loadObjects(d, true);
Is2bMap.map.events.add('boundschange', function (e) {
if (Is2bMap.block.hasClass('is2b-loaded-points')) {
return !1;
}
d = Is2bMap.dataMapKlaster();
ClusterIs2bMapSite.loadObjects(d, false);
});
},
setBounds: function () {
if (Is2bMap.geoObjects != null) {
if (Is2bMap.geoObjects.length > 0) {
console.log('set Bounds');
console.log(Is2bMap.clusterer.getBounds());
Is2bMap.map.setBounds(Is2bMap.clusterer.getBounds(), {
checkZoomRange: true
});
}
}
},
loadObjects: function (d, setBounds) {
Is2bMap.removeAllPoints();
$.ajax({url: this.url + (d === '' ? '' : '&' + d), dataType: 'json'}).done(function (data) {
console.log(data.length);
Is2bMap.setPoints(data);
if (setBounds) {
ClusterIs2bMapSite.setBounds();
}
});
}
};
ymaps.ready(function () {
ClusterIs2bMapSite.init({{ yaMaps.YandexMapCenter() }}, window.location.protocol + '//' + window.location.hostname + '/agency/realty/map' + (window.location.search || '?'));
})
{{ html.scriptEnd() }}
